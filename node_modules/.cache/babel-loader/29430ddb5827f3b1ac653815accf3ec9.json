{"ast":null,"code":"var _jsxFileName = \"c:\\\\projects\\\\react-app\\\\src\\\\sorting\\\\Sorting.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport Block from \"./utils/Block\";\nimport WaitButton from './utils/WaitButton';\nimport \"./GeneralSorting.css\";\nimport { properties } from './../env.properties';\n\nclass Sorting extends Block {\n  constructor(props) {\n    super(props);\n    this.reference = React.createRef();\n    this.waitTop = 384;\n    this.state = {\n      options: [],\n      sort: this.props.sort === \"\" || this.props.sort === undefined ? \"QUICK\" : this.props.sort.toUpperCase(),\n      asc: true,\n      isButtonClicked: false\n    };\n  }\n\n  handleSortChange(event) {\n    this.setStateParam(\"sort\", event.target.value);\n  }\n\n  handleAscChange(event) {\n    this.setStateParam(\"asc\", event.target.checked);\n  }\n\n  handleSortButton(event) {\n    var items = this.props.textareaValue.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\n    this.props.setWaitPos(this.waitTop, this.waitLeft);\n    this.props.setStateParam(\"isButtonClicked\", true);\n    var params = {\n      sort: this.state.sort\n    };\n\n    if (!this.state.asc) {\n      params[\"asc\"] = false;\n    }\n\n    const CONFIG = {\n      params: params,\n      headers: {\n        Authorization: \"Bearer \" + this.props.getStateParam(\"token\")\n      }\n    };\n    Axios.post(properties.appPath, items, CONFIG).then(response => {\n      this.props.updateParent(\"[\" + response.data.sortedItems + \"]\");\n      this.props.setStateParam(\"isButtonClicked\", false);\n    }).catch(error => {\n      alert(error.message);\n      this.props.setStateParam(\"isButtonClicked\", false);\n    });\n    this.expandCookies();\n  }\n\n  componentDidMount() {\n    Axios.get(properties.sortEnumPath).then(response => {\n      this.setStateParam(\"options\", response.data);\n    }).catch(error => {\n      this.setStateParam(\"options\", [\"-- ERROR --\"]);\n    });\n  }\n\n  render() {\n    let optionsList = this.state.options.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, item);\n    }, this);\n    return React.createElement(\"div\", {\n      ref: this.reference,\n      style: this.border,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sort type:\\xA0\", React.createElement(\"select\", {\n      name: \"sortEnum\",\n      value: this.state.sort,\n      onChange: this.handleSortChange = this.handleSortChange.bind(this),\n      disabled: this.props.getStateParam(\"token\") === undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, optionsList))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Ascending:\\xA0\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleAscChange = this.handleAscChange.bind(this),\n      defaultChecked: this.state.asc,\n      disabled: this.props.getStateParam(\"token\") === undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(WaitButton, {\n      text: \"Generate\",\n      onClick: this.handleSortButton = this.handleSortButton.bind(this),\n      disabled: this.isDisabled(false),\n      wait: this.props.getStateParam(\"isButtonClicked\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Sorting;","map":{"version":3,"sources":["c:/projects/react-app/src/sorting/Sorting.js"],"names":["React","Axios","Block","WaitButton","properties","Sorting","constructor","props","reference","createRef","waitTop","state","options","sort","undefined","toUpperCase","asc","isButtonClicked","handleSortChange","event","setStateParam","target","value","handleAscChange","checked","handleSortButton","items","textareaValue","replace","split","setWaitPos","waitLeft","params","CONFIG","headers","Authorization","getStateParam","post","appPath","then","response","updateParent","data","sortedItems","catch","error","alert","message","expandCookies","componentDidMount","get","sortEnumPath","render","optionsList","map","item","i","border","bind","isDisabled"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport Block from \"./utils/Block\"\r\nimport WaitButton from './utils/WaitButton';\r\nimport \"./GeneralSorting.css\";\r\nimport { properties } from './../env.properties';\r\n\r\nclass Sorting extends Block {\r\n    constructor(props) {\r\n        super(props);\r\n        this.reference = React.createRef();\r\n        this.waitTop = 384;\r\n        this.state = {\r\n            options: [],\r\n            sort: this.props.sort === \"\" || this.props.sort === undefined ? \"QUICK\" : this.props.sort.toUpperCase(),\r\n            asc: true,\r\n            isButtonClicked: false\r\n        };\r\n    }\r\n\r\n    handleSortChange(event) {\r\n        this.setStateParam(\"sort\", event.target.value);\r\n    }\r\n    \r\n    handleAscChange(event) {\r\n        this.setStateParam(\"asc\", event.target.checked);\r\n    }\r\n    \r\n    handleSortButton(event) {\r\n        var items = this.props.textareaValue.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\r\n\r\n        this.props.setWaitPos(this.waitTop, this.waitLeft);\r\n        this.props.setStateParam(\"isButtonClicked\", true);\r\n        var params = {\r\n            sort: this.state.sort\r\n        };\r\n        if (!this.state.asc) {\r\n            params[\"asc\"] = false;\r\n        }\r\n        const CONFIG = {\r\n            params: params, \r\n            headers: {\r\n                Authorization: \"Bearer \" + this.props.getStateParam(\"token\")\r\n            }\r\n        };\r\n        Axios.post(properties.appPath, items, CONFIG)\r\n            .then(response => {\r\n                this.props.updateParent(\"[\" + response.data.sortedItems + \"]\");\r\n                this.props.setStateParam(\"isButtonClicked\", false);\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                this.props.setStateParam(\"isButtonClicked\", false);\r\n            });\r\n        this.expandCookies();\r\n    }\r\n    \r\n    componentDidMount() {\r\n        Axios.get(properties.sortEnumPath)\r\n            .then(response => {\r\n                this.setStateParam(\"options\", response.data);\r\n            })\r\n            .catch(error => {\r\n                this.setStateParam(\"options\", [\"-- ERROR --\"]);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let optionsList = this.state.options.map((item, i) => {\r\n          return (\r\n            <option key={i} value={item} >{item}</option>\r\n          )\r\n        }, this);\r\n        return (\r\n            <div ref={this.reference} style={this.border}>\r\n                <div>\r\n                    <label>\r\n                        Sort type:&nbsp;\r\n                        <select name=\"sortEnum\" \r\n                            value={this.state.sort} \r\n                            onChange={this.handleSortChange = this.handleSortChange.bind(this)}\r\n                            disabled={this.props.getStateParam(\"token\") === undefined}>\r\n                            {optionsList}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label> \r\n                        Ascending:&nbsp;\r\n                        <input type=\"checkbox\" \r\n                            onChange={this.handleAscChange = this.handleAscChange.bind(this)} \r\n                            defaultChecked={this.state.asc}\r\n                            disabled={this.props.getStateParam(\"token\") === undefined} />\r\n                    </label>\r\n                </div>\r\n                <WaitButton\r\n                    text=\"Generate\"\r\n                    onClick={this.handleSortButton = this.handleSortButton.bind(this)} \r\n                    disabled={this.isDisabled(false)}\r\n                    wait={this.props.getStateParam(\"isButtonClicked\")} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sorting;"]},"metadata":{},"sourceType":"module"}