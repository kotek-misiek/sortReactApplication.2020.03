{"ast":null,"code":"import { Component } from 'react';\n\nclass Block extends Component {\n  constructor(...args) {\n    super(...args);\n    this.mystyle = {\n      textAlign: \"right\"\n    };\n    this.waitStyle = {};\n    this.waitSize = 40;\n    this.waitTop = 0;\n    this.waitLeft = 0;\n  }\n\n  calculateWaitPos(event) {\n    var indent = (event.currentTarget.offsetHeight - this.waitSize) / 2;\n    this.waitTop = event.clientY + indent;\n    this.waitLeft = event.clientX + (event.currentTarget.offsetWidth - this.waitSize - indent);\n    this.calculateWaitStyle(true);\n  }\n\n  calculateWaitStyle(isClicked) {\n    this.waitStyle = isClicked ? {\n      \"position\": \"absolute\",\n      \"width\": this.waitSize + \"px\",\n      \"height\": this.waitSize + \"px\",\n      \"top\": this.waitTop + \"px\",\n      \"left\": this.waitLeft + \"px\",\n      \"display\": \"block\"\n    } : {};\n  }\n\n  setStateParam(param, value) {\n    var state = this.state;\n    state[param] = value;\n    this.setState(state);\n  }\n\n}\n\nexport default Block;","map":{"version":3,"sources":["c:/projects/react-app/src/sorting/utils/Block.js"],"names":["Component","Block","mystyle","textAlign","waitStyle","waitSize","waitTop","waitLeft","calculateWaitPos","event","indent","currentTarget","offsetHeight","clientY","clientX","offsetWidth","calculateWaitStyle","isClicked","setStateParam","param","value","state","setState"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,KAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BE,OAD2B,GACjB;AACNC,MAAAA,SAAS,EAAE;AADL,KADiB;AAAA,SAK3BC,SAL2B,GAKf,EALe;AAAA,SAM3BC,QAN2B,GAMhB,EANgB;AAAA,SAO3BC,OAP2B,GAOjB,CAPiB;AAAA,SAQ3BC,QAR2B,GAQhB,CARgB;AAAA;;AAU3BC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,QAAIC,MAAM,GAAG,CAACD,KAAK,CAACE,aAAN,CAAoBC,YAApB,GAAmC,KAAKP,QAAzC,IAAqD,CAAlE;AACA,SAAKC,OAAL,GAAeG,KAAK,CAACI,OAAN,GAAgBH,MAA/B;AACA,SAAKH,QAAL,GAAgBE,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACE,aAAN,CAAoBI,WAApB,GAAkC,KAAKV,QAAvC,GAAkDK,MAAnE,CAAhB;AACA,SAAKM,kBAAL,CAAwB,IAAxB;AACH;;AAEDA,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,SAAKb,SAAL,GAAiBa,SAAS,GACpB;AACE,kBAAY,UADd;AAEE,eAAS,KAAKZ,QAAL,GAAgB,IAF3B;AAGE,gBAAU,KAAKA,QAAL,GAAgB,IAH5B;AAIE,aAAO,KAAKC,OAAL,GAAe,IAJxB;AAKE,cAAQ,KAAKC,QAAL,GAAgB,IAL1B;AAME,iBAAW;AANb,KADoB,GASpB,EATN;AAUH;;AAEDW,EAAAA,aAAa,CAACC,KAAD,EAAQC,KAAR,EAAe;AACxB,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AACAA,IAAAA,KAAK,CAACF,KAAD,CAAL,GAAeC,KAAf;AACA,SAAKE,QAAL,CAAcD,KAAd;AACH;;AAlC0B;;AAqC/B,eAAepB,KAAf","sourcesContent":["import { Component } from 'react';\r\n\r\nclass Block  extends Component {\r\n    mystyle = {\r\n        textAlign: \"right\"\r\n    };\r\n\r\n    waitStyle = {};\r\n    waitSize = 40;\r\n    waitTop = 0;\r\n    waitLeft = 0;\r\n\r\n    calculateWaitPos(event) {\r\n        var indent = (event.currentTarget.offsetHeight - this.waitSize) / 2;\r\n        this.waitTop = event.clientY + indent;\r\n        this.waitLeft = event.clientX + (event.currentTarget.offsetWidth - this.waitSize - indent);\r\n        this.calculateWaitStyle(true);\r\n    }\r\n\r\n    calculateWaitStyle(isClicked) {\r\n        this.waitStyle = isClicked \r\n            ? {\r\n                \"position\": \"absolute\",\r\n                \"width\": this.waitSize + \"px\",\r\n                \"height\": this.waitSize + \"px\",\r\n                \"top\": this.waitTop + \"px\", \r\n                \"left\": this.waitLeft + \"px\", \r\n                \"display\": \"block\"\r\n            } \r\n            : {};\r\n    }\r\n\r\n    setStateParam(param, value) {\r\n        var state = this.state;\r\n        state[param] = value;\r\n        this.setState(state);\r\n    }\r\n}\r\n\r\nexport default Block;"]},"metadata":{},"sourceType":"module"}