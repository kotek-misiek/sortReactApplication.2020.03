{"ast":null,"code":"import { Component } from 'react';\n\nclass Block extends Component {\n  constructor(...args) {\n    super(...args);\n    this.mystyle = {\n      textAlign: \"right\"\n    };\n    this.waitSize = 40;\n    this.waitTop = 0;\n    this.waitLeft = 0;\n  }\n\n  calculateWaitPos(event) {\n    var indent = (event.currentTarget.offsetHeight - this.waitSize) / 2;\n    this.waitTop = event.clientY + indent;\n    this.waitLeft = event.clientX + (event.currentTarget.offsetWidth - this.waitSize - indent);\n  }\n\n  setStateParam(param, value) {\n    var state = this.state;\n    state[param] = value;\n    this.setState(state);\n  }\n\n}\n\nexport default Block;","map":{"version":3,"sources":["c:/projects/react-app/src/sorting/utils/Block.js"],"names":["Component","Block","mystyle","textAlign","waitSize","waitTop","waitLeft","calculateWaitPos","event","indent","currentTarget","offsetHeight","clientY","clientX","offsetWidth","setStateParam","param","value","state","setState"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,KAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BE,OAD2B,GACjB;AACNC,MAAAA,SAAS,EAAE;AADL,KADiB;AAAA,SAK3BC,QAL2B,GAKhB,EALgB;AAAA,SAM3BC,OAN2B,GAMjB,CANiB;AAAA,SAO3BC,QAP2B,GAOhB,CAPgB;AAAA;;AAS3BC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,QAAIC,MAAM,GAAG,CAACD,KAAK,CAACE,aAAN,CAAoBC,YAApB,GAAmC,KAAKP,QAAzC,IAAqD,CAAlE;AACA,SAAKC,OAAL,GAAeG,KAAK,CAACI,OAAN,GAAgBH,MAA/B;AACA,SAAKH,QAAL,GAAgBE,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACE,aAAN,CAAoBI,WAApB,GAAkC,KAAKV,QAAvC,GAAkDK,MAAnE,CAAhB;AACH;;AAEDM,EAAAA,aAAa,CAACC,KAAD,EAAQC,KAAR,EAAe;AACxB,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AACAA,IAAAA,KAAK,CAACF,KAAD,CAAL,GAAeC,KAAf;AACA,SAAKE,QAAL,CAAcD,KAAd;AACH;;AAnB0B;;AAsB/B,eAAejB,KAAf","sourcesContent":["import { Component } from 'react';\r\n\r\nclass Block  extends Component {\r\n    mystyle = {\r\n        textAlign: \"right\"\r\n    };\r\n\r\n    waitSize = 40;\r\n    waitTop = 0;\r\n    waitLeft = 0;\r\n\r\n    calculateWaitPos(event) {\r\n        var indent = (event.currentTarget.offsetHeight - this.waitSize) / 2;\r\n        this.waitTop = event.clientY + indent;\r\n        this.waitLeft = event.clientX + (event.currentTarget.offsetWidth - this.waitSize - indent);\r\n    }\r\n\r\n    setStateParam(param, value) {\r\n        var state = this.state;\r\n        state[param] = value;\r\n        this.setState(state);\r\n    }\r\n}\r\n\r\nexport default Block;"]},"metadata":{},"sourceType":"module"}